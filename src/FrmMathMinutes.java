/*
Nandini Seth
ICS3U
This program will take in required input and generate random multiplication questions that meet the requirements provided by the user.
The user can choose to skip the current question and the program will provide another question. 
 */

/**
 *
 * @author nandiniseth
 */

import java.util.*;

public class FrmMathMinutes extends javax.swing.JFrame {
        // Declaring and Initializing variables
        int Min = 0;
        int Max = 0;
        int NumQ = 0;
        int Answer = 0;
        int NumCorrect = 0;
        int NumWrong = 0;
        int NumSkipped = 0;
        int Num1 = 0;
        int Num2 = 0;
        int currentQuestionNum = 0;
        
        double timeInitial = 0;
        double timeEnd = 0;
        double timeTaken = 0;
        
        boolean validInput = true;
        
        final int MAXRANGE = 13;
        final int MINRANGE = 0;
        final int QMAX = 100;
        
        /*
        This method generates a random number between the user provided maximum and minimum value
        */
        public int generateRandom (int min, int max) {
            int num1 = (new Random()).nextInt(max - min + 1) + min;
            return num1;
        }
        
        /*
        This method generates a random multiplication question and displays it. The method will only generate the amount of questions told by the user
        */
        private void showNextQuestion() {
           // Resetting for neatness
           lblNum1.setText(" ");
           lblNum2.setText(" ");
           // Choosing and displaying numbers
           Num1 = generateRandom (Min, Max); // Calling method for neatness
           Num2 = generateRandom (Min, Max);
           lblNum1.setText(String.valueOf(Num1));
           lblNum2.setText(String.valueOf(Num2));
           // To keep count and prevent too many questions from displaying
           currentQuestionNum++;
           if (currentQuestionNum > NumQ)
           {
              showFinalResults(); // calling method to perform closing tasks
           }
        }
    
        /*
        This method displays all the user stats and disables any further input areas to avoid the program from crashing
        */
        private void showFinalResults() {
          // Recording time and finding time elapsed
          timeEnd = System.currentTimeMillis()/1000;
          timeTaken = timeEnd - timeInitial;
          // Displaying stats neatly
          lblDisplayCorrect.setText(String.valueOf(NumCorrect));
          lblDisplayWrong.setText(String.valueOf(NumWrong));
          lblDisplaySkip.setText(String.valueOf(NumSkipped));
          lblDisplayTimeTaken.setText(String.valueOf(timeTaken) + " seconds");
          // Resetting and disabling to safely exit program
          lblNum1.setText(" ");
          lblNum2.setText(" ");
          btnSkip.setEnabled(false);
          txtAnswer.setEnabled(false);
          lblCongrats.setText("Test Completed!"); // Congrats text
        }
        
    /**
     * Creates new form FrmMathMinutes
     */
    public FrmMathMinutes() {
        initComponents(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLeft = new javax.swing.JPanel();
        lblMin = new javax.swing.JLabel();
        lblMax = new javax.swing.JLabel();
        txtMax = new javax.swing.JTextField();
        txtMin = new javax.swing.JTextField();
        lblNumQuestion = new javax.swing.JLabel();
        txtNumQuestion = new javax.swing.JTextField();
        btnStart = new javax.swing.JButton();
        lblProceed = new javax.swing.JLabel();
        pnlRight = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblInstruction1 = new javax.swing.JLabel();
        lblInstruction2 = new javax.swing.JLabel();
        lblInstruction3 = new javax.swing.JLabel();
        lblNum1 = new javax.swing.JLabel();
        lblX = new javax.swing.JLabel();
        lblNum2 = new javax.swing.JLabel();
        btnSkip = new javax.swing.JButton();
        txtAnswer = new javax.swing.JTextField();
        lblNumCorrect = new javax.swing.JLabel();
        lblNumWrong = new javax.swing.JLabel();
        lblDisplayRW = new javax.swing.JLabel();
        lblTimeTaken = new javax.swing.JLabel();
        lblDisplayCorrect = new javax.swing.JLabel();
        lblDisplayWrong = new javax.swing.JLabel();
        lblDisplayTimeTaken = new javax.swing.JLabel();
        lblInstruction4 = new javax.swing.JLabel();
        lblInstruction5 = new javax.swing.JLabel();
        lblNumSkip = new javax.swing.JLabel();
        lblDisplaySkip = new javax.swing.JLabel();
        lblCongrats = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        pnlLeft.setBackground(new java.awt.Color(246, 189, 96));

        lblMin.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        lblMin.setText("Minimum(1-13):");

        lblMax.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        lblMax.setText("Maximum(1-13):");

        txtMax.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        txtMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxActionPerformed(evt);
            }
        });

        txtMin.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        txtMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinActionPerformed(evt);
            }
        });

        lblNumQuestion.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        lblNumQuestion.setText("Number of Questions(1-100):");

        txtNumQuestion.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        txtNumQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumQuestionActionPerformed(evt);
            }
        });

        btnStart.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        lblProceed.setFont(new java.awt.Font("Georgia", 0, 15)); // NOI18N
        lblProceed.setText(" ");

        javax.swing.GroupLayout pnlLeftLayout = new javax.swing.GroupLayout(pnlLeft);
        pnlLeft.setLayout(pnlLeftLayout);
        pnlLeftLayout.setHorizontalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLeftLayout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addGroup(pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNumQuestion)
                    .addComponent(lblProceed, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(pnlLeftLayout.createSequentialGroup()
                .addGroup(pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(txtNumQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(txtMax, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMin, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMax))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLeftLayout.setVerticalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLeftLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblMin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblMax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMax, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblNumQuestion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNumQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblProceed, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlRight.setBackground(new java.awt.Color(255, 243, 176));

        lblTitle.setFont(new java.awt.Font("Georgia", 0, 36)); // NOI18N
        lblTitle.setText("MATH MINUTES");

        lblInstruction1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblInstruction1.setText("Welcome to Math Minutes! This program is to help you practice your multiplication");

        lblInstruction2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblInstruction2.setText("skills. First, go to the orange pane and type the range of numbers you want to practice");

        lblInstruction3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblInstruction3.setText("with. Then type the number of questions you want to do, and click Start. The questions");

        lblNum1.setFont(new java.awt.Font("Georgia", 0, 36)); // NOI18N

        lblX.setFont(new java.awt.Font("Georgia", 0, 36)); // NOI18N
        lblX.setText("x");

        lblNum2.setFont(new java.awt.Font("Georgia", 0, 36)); // NOI18N
        lblNum2.setText(" ");

        btnSkip.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        btnSkip.setText("SKIP");
        btnSkip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkipActionPerformed(evt);
            }
        });

        txtAnswer.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        txtAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnswerActionPerformed(evt);
            }
        });

        lblNumCorrect.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblNumCorrect.setText("Correct:");

        lblNumWrong.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblNumWrong.setText("Wrong:");

        lblDisplayRW.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblDisplayRW.setText(" ");

        lblTimeTaken.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblTimeTaken.setText("Time Taken:");

        lblDisplayCorrect.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblDisplayCorrect.setText(" ");

        lblDisplayWrong.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblDisplayWrong.setText(" ");

        lblDisplayTimeTaken.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblDisplayTimeTaken.setText(" ");

        lblInstruction4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblInstruction4.setText("will appear one-by-one. To submit an answer, type a number into the white box and click ");

        lblInstruction5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblInstruction5.setText("Enter. To skip a question, click Skip.");

        lblNumSkip.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblNumSkip.setText("Skipped:");

        lblDisplaySkip.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblDisplaySkip.setText(" ");

        lblCongrats.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        lblCongrats.setText(" ");

        javax.swing.GroupLayout pnlRightLayout = new javax.swing.GroupLayout(pnlRight);
        pnlRight.setLayout(pnlRightLayout);
        pnlRightLayout.setHorizontalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRightLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(139, 139, 139))
            .addGroup(pnlRightLayout.createSequentialGroup()
                .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRightLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNumCorrect)
                            .addComponent(lblNumWrong)
                            .addComponent(lblTimeTaken)
                            .addComponent(lblNumSkip))
                        .addGap(18, 18, 18)
                        .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDisplayWrong, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDisplayCorrect, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDisplaySkip, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDisplayTimeTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlRightLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblInstruction4))
                    .addGroup(pnlRightLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblInstruction5))
                    .addGroup(pnlRightLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInstruction3)
                            .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblInstruction1)
                                .addComponent(lblInstruction2))))
                    .addGroup(pnlRightLayout.createSequentialGroup()
                        .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRightLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(btnSkip, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRightLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRightLayout.createSequentialGroup()
                                .addComponent(lblX, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlRightLayout.createSequentialGroup()
                                .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(lblDisplayRW, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlRightLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(lblCongrats, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        pnlRightLayout.setVerticalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstruction1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstruction2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstruction3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstruction4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstruction5)
                .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRightLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRightLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblX))))
                .addGap(18, 18, 18)
                .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSkip, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDisplayRW, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblCongrats, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumCorrect)
                    .addComponent(lblDisplayCorrect, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumWrong)
                    .addComponent(lblDisplayWrong, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumSkip)
                    .addComponent(lblDisplaySkip, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeTaken)
                    .addComponent(lblDisplayTimeTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaxActionPerformed

    private void txtMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinActionPerformed

    private void txtNumQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumQuestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumQuestionActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // Gathering input and validating it
        String inputMin = txtMin.getText();
        String inputMax = txtMax.getText();
        String inputNumQ = txtNumQuestion.getText();
        
        // User input validation section
        validInput = true; // To ensure program runs smoothly
        
            try { // try to convert to int
             Min = Integer.parseInt(inputMin);
             // if successful, proceed
                if (Min <= MINRANGE) {
                 lblProceed.setText("Minimum must be more than 0");
                 validInput = false;
                } // if minimum doesn't meet requirements
                
                if (Min > MAXRANGE) {
                  lblProceed.setText("Minimum must be less than " + String.valueOf(MAXRANGE));
                  validInput = false; 
                }// if minimum doesn't meet requirements     
            } // Try min
          
            catch (NumberFormatException e) { // catch conversion error
              lblProceed.setText("Please check your Minimum value.");
              validInput = false;  
            } // catch min
          
            try { // try to convert to int
             Max = Integer.parseInt(inputMax);
             // if successful, proceed
              if (Max <= Min) {
                 lblProceed.setText("Maximum must be more than Minimum.");
                 validInput = false; 
              } // if max doesn't meet requirements
              
              if (Max > MAXRANGE) {
                  lblProceed.setText("Maximum must be less than " + String.valueOf(MAXRANGE));
                  validInput = false; 
              }// if max doesn't meet requirements
            } // try max
          
            catch (NumberFormatException e) { // catch conversion error
              lblProceed.setText("Please check your Maximum value.");
              validInput = false;
            } // catch max
          
            try {  // try to convert to int
             NumQ = Integer.parseInt(inputNumQ);
             // if successful, proceed
                if (NumQ <= MINRANGE) {
                  lblProceed.setText("Come on, try at least 1 question!");
                 validInput = false;  
                } // if num of questions doesn't meet requirements
             
                if (NumQ > QMAX) {
                  lblProceed.setText("Too many questions :( ");
                  validInput = false;
                } // if num of questions doesn't meet requirements
            } // Number Question try
            
            catch (NumberFormatException e) {
              lblProceed.setText("Please check your Number of Questions value.");
              validInput = false;
            } // Number Question catch
          
            if (validInput == true)  { // if ALL input meets requirements
              // Positive message because why not 
              lblProceed.setText("Great! Let's do some multiplication");
              
               // Valid input received, disabling further input
              txtMin.setEnabled(false);
              txtMax.setEnabled(false);
              txtNumQuestion.setEnabled(false);
              btnStart.setEnabled(false);
            
              // Recording start time 
              timeInitial = System.currentTimeMillis()/1000;
              // Calling method to display question
              showNextQuestion();
            }   
    }//GEN-LAST:event_btnStartActionPerformed
    
    private void btnSkipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkipActionPerformed
        // if user decided to skip the question
        txtAnswer.setText(""); // Reset text box that gathers answer
        NumSkipped++; // add one to skipped number
        showNextQuestion(); // call method to display next question
    }//GEN-LAST:event_btnSkipActionPerformed

    private void txtAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnswerActionPerformed
        // when user inputs answer, check for correctness
        String inputAnswer = txtAnswer.getText(); // gather as string
        
        try { // try to convert to int
           Answer = Integer.parseInt(inputAnswer);       
        } // answer try
            
        catch (NumberFormatException e) { // catch coversion error
          txtAnswer.setText("");
        } // answer try
        
        if (Answer == Num1*Num2) {
            lblDisplayRW.setText("Correct!"); // congrats message
            NumCorrect++; // Correct counter up one
        } // if answer is right
        
        else {
            lblDisplayRW.setText("Wrong :("); // message
            NumWrong++;
        } // answer is wrong
        
        txtAnswer.setText(""); // Reset text
        // Calling method to display another question
        showNextQuestion();
    }//GEN-LAST:event_txtAnswerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMathMinutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMathMinutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMathMinutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMathMinutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMathMinutes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSkip;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel lblCongrats;
    private javax.swing.JLabel lblDisplayCorrect;
    private javax.swing.JLabel lblDisplayRW;
    private javax.swing.JLabel lblDisplaySkip;
    private javax.swing.JLabel lblDisplayTimeTaken;
    private javax.swing.JLabel lblDisplayWrong;
    private javax.swing.JLabel lblInstruction1;
    private javax.swing.JLabel lblInstruction2;
    private javax.swing.JLabel lblInstruction3;
    private javax.swing.JLabel lblInstruction4;
    private javax.swing.JLabel lblInstruction5;
    private javax.swing.JLabel lblMax;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblNum1;
    private javax.swing.JLabel lblNum2;
    private javax.swing.JLabel lblNumCorrect;
    private javax.swing.JLabel lblNumQuestion;
    private javax.swing.JLabel lblNumSkip;
    private javax.swing.JLabel lblNumWrong;
    private javax.swing.JLabel lblProceed;
    private javax.swing.JLabel lblTimeTaken;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblX;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlRight;
    private javax.swing.JTextField txtAnswer;
    private javax.swing.JTextField txtMax;
    private javax.swing.JTextField txtMin;
    private javax.swing.JTextField txtNumQuestion;
    // End of variables declaration//GEN-END:variables
} // main class end
